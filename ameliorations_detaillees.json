[
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\config\\optimization_config.py",
    "issues_count": 2,
    "total_complexity": 32,
    "functions": [
      "main",
      "load_from_file"
    ],
    "recommendations": [
      "🟢 Fonction `main` (complexité: 14) - Simplifier les conditions ou utiliser des dictionnaires de dispatch",
      "🟡 Fonction `load_from_file` (complexité: 18) - Extraire la logique conditionnelle en méthodes séparées",
      "💡 Utiliser des classes de configuration avec validation automatique (pydantic)"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\config_manager.py",
    "issues_count": 1,
    "total_complexity": 13,
    "functions": [
      "load_config"
    ],
    "recommendations": [
      "🟢 Fonction `load_config` (complexité: 13) - Simplifier les conditions ou utiliser des dictionnaires de dispatch",
      "💡 Utiliser des classes de configuration avec validation automatique (pydantic)"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\data_validator.py",
    "issues_count": 1,
    "total_complexity": 15,
    "functions": [
      "validate_sample"
    ],
    "recommendations": [
      "🟢 Fonction `validate_sample` (complexité: 15) - Simplifier les conditions ou utiliser des dictionnaires de dispatch",
      "💡 Créer des validateurs spécialisés par type de données"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\export_manager.py",
    "issues_count": 1,
    "total_complexity": 11,
    "functions": [
      "_export_hdf5"
    ],
    "recommendations": [
      "🟢 Fonction `_export_hdf5` (complexité: 11) - Simplifier les conditions ou utiliser des dictionnaires de dispatch"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\metadata_manager.py",
    "issues_count": 2,
    "total_complexity": 30,
    "functions": [
      "from_dict",
      "search_sessions"
    ],
    "recommendations": [
      "🟡 Fonction `from_dict` (complexité: 16) - Extraire la logique conditionnelle en méthodes séparées",
      "🟢 Fonction `search_sessions` (complexité: 14) - Simplifier les conditions ou utiliser des dictionnaires de dispatch"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\view_manager.py",
    "issues_count": 2,
    "total_complexity": 46,
    "functions": [
      "_create_view_manager_class",
      "show_error_toast"
    ],
    "recommendations": [
      "🔴 URGENT - Fonction `_create_view_manager_class` (complexité: 35) - Diviser en plusieurs fonctions plus petites",
      "🟢 Fonction `show_error_toast` (complexité: 11) - Simplifier les conditions ou utiliser des dictionnaires de dispatch",
      "💡 Considérer l'utilisation du pattern State pour gérer les transitions de vues"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\graph_manager.py",
    "issues_count": 1,
    "total_complexity": 28,
    "functions": [
      "_create_graph_classes"
    ],
    "recommendations": [
      "🔴 URGENT - Fonction `_create_graph_classes` (complexité: 28) - Diviser en plusieurs fonctions plus petites"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\export_view.py",
    "issues_count": 1,
    "total_complexity": 11,
    "functions": [
      "exportAll"
    ],
    "recommendations": [
      "🟢 Fonction `exportAll` (complexité: 11) - Simplifier les conditions ou utiliser des dictionnaires de dispatch"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\hardware_adapter.py",
    "issues_count": 1,
    "total_complexity": 13,
    "functions": [
      "_select_backend"
    ],
    "recommendations": [
      "🟢 Fonction `_select_backend` (complexité: 13) - Simplifier les conditions ou utiliser des dictionnaires de dispatch"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\tools\\lab_config.py",
    "issues_count": 2,
    "total_complexity": 32,
    "functions": [
      "main",
      "validate_config"
    ],
    "recommendations": [
      "🟡 Fonction `main` (complexité: 20) - Extraire la logique conditionnelle en méthodes séparées",
      "🟢 Fonction `validate_config` (complexité: 12) - Simplifier les conditions ou utiliser des dictionnaires de dispatch",
      "💡 Utiliser des classes de configuration avec validation automatique (pydantic)"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\utils\\hdf_writer.py",
    "issues_count": 1,
    "total_complexity": 11,
    "functions": [
      "verify_file_integrity"
    ],
    "recommendations": [
      "🟢 Fonction `verify_file_integrity` (complexité: 11) - Simplifier les conditions ou utiliser des dictionnaires de dispatch"
    ]
  },
  {
    "type": "complexity_reduction",
    "priority": "medium",
    "file": "src\\hrneowave\\utils\\validators.py",
    "issues_count": 1,
    "total_complexity": 21,
    "functions": [
      "validate_value"
    ],
    "recommendations": [
      "🔴 URGENT - Fonction `validate_value` (complexité: 21) - Diviser en plusieurs fonctions plus petites",
      "💡 Créer des validateurs spécialisés par type de données"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "high",
    "file": "src\\hrneowave\\gui\\components\\material_components.py",
    "lines": 1311,
    "recommendations": [
      "🔧 Diviser en modules spécialisés par type de composant (buttons, inputs, dialogs)",
      "🔧 Créer un factory pattern pour la création de composants",
      "🔧 Extraire les styles CSS dans des fichiers séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "high",
    "file": "src\\hrneowave\\gui\\views\\analysis_view.py",
    "lines": 910,
    "recommendations": [
      "🔧 Séparer la logique d'analyse de l'interface utilisateur",
      "🔧 Créer des widgets spécialisés pour chaque type d'analyse",
      "🔧 Utiliser des contrôleurs dédiés pour chaque onglet d'analyse"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "high",
    "file": "src\\hrneowave\\gui\\controllers\\acquisition_controller.py",
    "lines": 876,
    "recommendations": [
      "🔧 Séparer la logique d'acquisition de la gestion de l'interface",
      "🔧 Créer des classes spécialisées pour chaque type de capteur",
      "🔧 Utiliser des workers asynchrones pour l'acquisition de données"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\calibration_view.py",
    "lines": 750,
    "recommendations": [
      "🔧 Extraire la logique de génération PDF dans un module séparé",
      "🔧 Créer des widgets réutilisables pour les différents types de calibration",
      "🔧 Séparer la validation des données de l'interface"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\graph_manager.py",
    "lines": 724,
    "recommendations": [
      "🔧 Créer des classes spécialisées pour chaque type de graphique",
      "🔧 Utiliser des factories pour la création de graphiques",
      "🔧 Séparer la logique de rendu de la gestion des données"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\tools\\lab_config.py",
    "lines": 706,
    "recommendations": [
      "🔧 Diviser ce fichier en 2 modules avec des responsabilités claires"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\performance_widget.py",
    "lines": 686,
    "recommendations": [
      "🔧 Diviser ce fichier en 2 modules avec des responsabilités claires"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\acquisition_view.py",
    "lines": 654,
    "recommendations": [
      "🔧 Diviser ce fichier en 2 modules avec des responsabilités claires"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\calibration_certificate.py",
    "lines": 585,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\data_validator.py",
    "lines": 554,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\metadata_manager.py",
    "lines": 552,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\project_manager.py",
    "lines": 549,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\controllers\\main_controller.py",
    "lines": 546,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\export_view.py",
    "lines": 544,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\circular_buffer.py",
    "lines": 538,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\utils\\calib_pdf.py",
    "lines": 506,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\config\\optimization_config.py",
    "lines": 479,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\post_processor.py",
    "lines": 477,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\main_window.py",
    "lines": 470,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\view_manager.py",
    "lines": 457,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\hardware_requirements.py",
    "lines": 454,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\iotech_backend.py",
    "lines": 437,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\logging_config.py",
    "lines": 434,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\config_manager.py",
    "lines": 420,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\theme\\styles_dark.py",
    "lines": 412,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\export_manager.py",
    "lines": 391,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\dashboard_view.py",
    "lines": 384,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\optimized_goda_analyzer.py",
    "lines": 376,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\hardware_adapter.py",
    "lines": 365,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\phi_card.py",
    "lines": 316,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\sidebar.py",
    "lines": 313,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\signal_bus.py",
    "lines": 308,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\ni_daqmx_backend.py",
    "lines": 294,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\core\\optimized_fft_processor.py",
    "lines": 292,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\components\\breadcrumb.py",
    "lines": 278,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\theme\\material_theme.py",
    "lines": 275,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\controllers\\optimized_processing_worker.py",
    "lines": 254,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\utils\\hdf_writer.py",
    "lines": 250,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\layouts\\phi_layout.py",
    "lines": 245,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\views\\welcome_view.py",
    "lines": 238,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\gui\\theme\\theme_manager.py",
    "lines": 233,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\utils\\hash_tools.py",
    "lines": 233,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "file_refactoring",
    "priority": "medium",
    "file": "src\\hrneowave\\hw\\demo_backend.py",
    "lines": 222,
    "recommendations": [
      "🔧 Extraire les classes/fonctions utilitaires dans des modules séparés"
    ]
  },
  {
    "type": "documentation",
    "priority": "medium",
    "description": "Améliorer la documentation du code",
    "current_ratio": "8.9%",
    "target_ratio": "15-20%",
    "recommendations": [
      "📝 Ajouter des commentaires explicatifs dans les fonctions complexes",
      "📝 Documenter les algorithmes et les formules utilisées",
      "📝 Ajouter des exemples d'utilisation dans les docstrings"
    ]
  },
  {
    "type": "architecture",
    "priority": "low",
    "description": "Améliorations architecturales",
    "recommendations": [
      "🏗️ Implémenter des interfaces (ABC) pour les composants critiques",
      "🏗️ Ajouter un système de plugins pour les backends d'acquisition",
      "🏗️ Créer un système de cache pour les résultats d'analyse",
      "🏗️ Implémenter un système de configuration par environnement"
    ]
  }
]