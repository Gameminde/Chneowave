CHNeoWave Documentation
=======================

.. image:: https://img.shields.io/badge/version-1.0.0-blue.svg
   :target: https://github.com/laboratoire-maritime/chneowave
   :alt: Version

.. image:: https://img.shields.io/badge/python-3.8+-green.svg
   :target: https://python.org
   :alt: Python Version

.. image:: https://img.shields.io/badge/license-MIT-blue.svg
   :target: LICENSE
   :alt: License

Bienvenue dans la documentation de **CHNeoWave**, le logiciel d'acquisition et d'analyse de donn√©es pour les laboratoires d'√©tudes maritimes en mod√®le r√©duit.

CHNeoWave est sp√©cialement con√ßu pour les √©tudes en bassins et canaux m√©diterran√©ens, offrant des outils avanc√©s d'acquisition, d'analyse spectrale et de g√©n√©ration de rapports scientifiques.

üéØ Fonctionnalit√©s Principales
------------------------------

* **Acquisition de donn√©es** en temps r√©el avec support multi-capteurs
* **Analyse spectrale avanc√©e** (FFT, Goda, statistiques)
* **Export scientifique HDF5** avec signature cryptographique
* **G√©n√©ration de certificats PDF** de calibration
* **Interface utilisateur moderne** avec Material Design
* **Architecture modulaire** et extensible

üìã Table des Mati√®res
---------------------

.. toctree::
   :maxdepth: 2
   :caption: Guide Utilisateur

   user_guide/installation
   user_guide/quickstart
   user_guide/workflows
   user_guide/troubleshooting

.. toctree::
   :maxdepth: 2
   :caption: Documentation Technique

   technical/architecture
   technical/api_reference
   technical/data_formats
   technical/performance

.. toctree::
   :maxdepth: 2
   :caption: D√©veloppement

   development/contributing
   development/testing
   development/packaging
   development/changelog

.. toctree::
   :maxdepth: 3
   :caption: R√©f√©rence API

   api/core
   api/gui
   api/hardware
   api/data
   api/utils

üöÄ D√©marrage Rapide
-------------------

Installation
~~~~~~~~~~~~

.. code-block:: bash

   # Installation depuis PyPI (recommand√©)
   pip install hrneowave

   # Ou installation depuis les sources
   git clone https://github.com/laboratoire-maritime/chneowave.git
   cd chneowave
   pip install -e .

Lancement
~~~~~~~~~

.. code-block:: bash

   # Lancement de l'interface graphique
   chneowave

   # Ou depuis Python
   python -m hrneowave.gui.main

Premier Projet
~~~~~~~~~~~~~~

1. **Cr√©er un nouveau projet** depuis l'interface d'accueil
2. **Configurer l'acquisition** (fr√©quence, dur√©e, capteurs)
3. **Lancer l'acquisition** et visualiser en temps r√©el
4. **Analyser les donn√©es** avec les outils int√©gr√©s
5. **Exporter les r√©sultats** en HDF5, PDF, Excel

üìä Exemples d'Utilisation
-------------------------

Acquisition Programm√©e
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

   from hrneowave.core import AcquisitionManager
   from hrneowave.hardware import SimulatedAdapter

   # Configuration de l'acquisition
   manager = AcquisitionManager()
   adapter = SimulatedAdapter(channels=8, fs=1000)
   
   # Lancement de l'acquisition
   session = manager.start_acquisition(
       adapter=adapter,
       duration=60.0,
       project_path="./mon_projet"
   )
   
   # Attendre la fin
   session.wait_completion()
   print(f"Donn√©es sauvegard√©es: {session.output_file}")

Analyse Spectrale
~~~~~~~~~~~~~~~~~

.. code-block:: python

   from hrneowave.analysis import SpectralAnalyzer
   import h5py

   # Charger les donn√©es
   with h5py.File("session_data.h5", "r") as f:
       data = f["data/raw_data"][:]
       fs = f["metadata"].attrs["sampling_frequency"]
   
   # Analyse spectrale
   analyzer = SpectralAnalyzer(window_size=1024)
   results = analyzer.analyze(data, fs)
   
   print(f"Fr√©quence de pic: {results.peak_frequency:.2f} Hz")
   print(f"Hauteur significative: {results.significant_height:.3f} m")

üîß Configuration
----------------

CHNeoWave utilise un syst√®me de configuration flexible bas√© sur YAML :

.. code-block:: yaml

   # config.yaml
   acquisition:
     default_fs: 1000
     default_duration: 60.0
     buffer_size: 8192
   
   analysis:
     fft_window: "hann"
     overlap_ratio: 0.5
     frequency_bands: [0.05, 0.5, 2.0]
   
   export:
     default_formats: ["hdf5", "pdf", "excel"]
     compression: "gzip"

üìà Performance
--------------

* **Acquisition temps r√©el** : Jusqu'√† 32 canaux √† 10 kHz
* **Traitement parall√®le** : Utilisation optimale des c≈ìurs CPU
* **M√©moire optimis√©e** : Buffers circulaires pour les longues acquisitions
* **Export rapide** : Compression HDF5 avec threads d√©di√©s

üÜò Support
----------

* **Documentation** : Cette documentation compl√®te
* **Exemples** : Dossier ``examples/`` avec cas d'usage
* **Tests** : Suite de tests compl√®te avec ``pytest``
* **Issues** : `GitHub Issues <https://github.com/laboratoire-maritime/chneowave/issues>`_

üìÑ Licence
----------

CHNeoWave est distribu√© sous licence MIT. Voir le fichier ``LICENSE`` pour plus de d√©tails.

üèõÔ∏è √Ä Propos
------------

CHNeoWave est d√©velopp√© par le **Laboratoire d'√âtudes Maritimes** pour les besoins sp√©cifiques des √©tudes en mod√®le r√©duit en M√©diterran√©e.

**Version** : 1.0.0  
**Auteurs** : √âquipe LEM  
**Contact** : lem@maritime.fr  

Indices et Tables
=================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`