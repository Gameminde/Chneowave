#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test MainWindow avec boucle d'√©v√©nements
"""

import sys
import traceback
from pathlib import Path

# Ajouter le chemin du projet
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_main_window_events():
    """Test MainWindow avec boucle d'√©v√©nements"""
    print("üöÄ TEST MAINWINDOW √âV√âNEMENTS")
    print("=" * 50)
    
    try:
        from PySide6.QtWidgets import QApplication
        from PySide6.QtCore import Qt, QTimer
        
        # Cr√©er QApplication
        app = QApplication.instance()
        if app is None:
            app = QApplication(sys.argv)
            app.setApplicationName("CHNeoWave Events Test")
        
        print("‚úÖ QApplication cr√©√©")
        
        # Test import MainWindow
        print("üîÑ Import MainWindow...")
        from hrneowave.gui.main_window import MainWindow
        print("‚úÖ MainWindow import√©")
        
        # Test cr√©ation MainWindow
        print("üîÑ Cr√©ation MainWindow...")
        main_window = MainWindow()
        print("‚úÖ MainWindow cr√©√©e")
        
        # Configuration de l'affichage
        main_window.setWindowTitle("CHNeoWave - Test √âv√©nements")
        main_window.resize(1200, 800)
        
        # Centrer la fen√™tre
        screen = app.primaryScreen()
        screen_geometry = screen.geometry()
        window_geometry = main_window.geometry()
        
        x = (screen_geometry.width() - window_geometry.width()) // 2
        y = (screen_geometry.height() - window_geometry.height()) // 2
        main_window.move(x, y)
        
        print("‚úÖ Fen√™tre configur√©e et centr√©e")
        
        # Test affichage avec boucle d'√©v√©nements
        print("üîÑ Affichage MainWindow avec boucle d'√©v√©nements...")
        
        # Utiliser la nouvelle m√©thode show_and_exec
        exit_code = main_window.show_and_exec()
        
        print(f"‚úÖ Test termin√© (code: {exit_code})")
        return True
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        traceback.print_exc()
        return False

if __name__ == "__main__":
    exit(0 if test_main_window_events() else 1)
