#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Interface en ligne de commande pour CHNeoWave
"""

import sys
import argparse
from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import Qt

def run_gui():
    """
    Lance l'interface graphique CHNeoWave
    """
    import os
    
    # Ajouter le répertoire parent au path pour les imports
    current_dir = os.path.dirname(os.path.abspath(__file__))
    parent_dir = os.path.dirname(current_dir)
    if parent_dir not in sys.path:
        sys.path.insert(0, parent_dir)
    
    try:
        # Configuration de l'application Qt
        QApplication.setAttribute(Qt.AA_EnableHighDpiScaling, True)
        QApplication.setAttribute(Qt.AA_UseHighDpiPixmaps, True)
        
        app = QApplication(sys.argv)
        app.setApplicationName("CHNeoWave")
        app.setApplicationVersion("1.0.0")
        app.setOrganizationName("Laboratoire Maritime")
        
        # Import et lancement de la fenêtre principale
        from hrneowave.gui.main_window import MainWindow
        
        window = MainWindow()
        window.show()
        
        # Démarrage de la boucle d'événements
        sys.exit(app.exec_())
        
    except ImportError as e:
        print(f"Erreur d'import: {e}")
        print("Vérifiez que PyQt5 est installé: pip install PyQt5")
        sys.exit(1)
    except Exception as e:
        print(f"Erreur lors du lancement: {e}")
        sys.exit(1)

def run_cli():
    """
    Point d'entrée principal de l'interface en ligne de commande
    """
    parser = argparse.ArgumentParser(
        description="CHNeoWave - Logiciel d'acquisition et d'analyse de données maritimes",
        prog="chneowave"
    )
    
    parser.add_argument(
        "--version", 
        action="version", 
        version="CHNeoWave 1.0.0"
    )
    
    parser.add_argument(
        "--gui", 
        action="store_true", 
        default=True,
        help="Lance l'interface graphique (par défaut)"
    )
    
    parser.add_argument(
        "--debug", 
        action="store_true", 
        help="Active le mode debug"
    )
    
    args = parser.parse_args()
    
    if args.debug:
        import logging
        logging.basicConfig(level=logging.DEBUG)
        print("Mode debug activé")
    
    # Par défaut, lance l'interface graphique
    run_gui()

if __name__ == "__main__":
    run_cli()